interface SessionDataEntry {
    value: unknown;
    flash: boolean;
}
/**
 * Interface for specifying the necessary data for a session entry
 */
export interface SessionData {
    _data: Record<string, SessionDataEntry>;
    _expire: string | null;
    _delete: boolean;
    _accessed: string | null;
}
/**
 * Session class with methods for interacting with the session
 */
export declare class Session {
    private cache;
    constructor();
    setCache(cache_data: SessionData): void;
    getCache(): SessionData;
    setExpiration(expiration: string): void;
    reupSession(expiration: number | null | undefined): void;
    deleteSession(): void;
    sessionValid(): boolean;
    updateAccess(): void;
    get(key: string): unknown;
    set(key: string, value: unknown): void;
    flash(key: string, value: unknown): void;
}
export {};
